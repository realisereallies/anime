import { PrismaClient } from '../app/generated/prisma';

const prisma = new PrismaClient();

async function checkReviews() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–∑—ã–≤—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    
    const reviews = await prisma.review.findMany({
      include: {
        author: {
          select: {
            name: true,
            email: true
          }
        },
        _count: {
          select: {
            likes: true,
            dislikes: true,
            comments: true
          }
        }
      }
    });

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: ${reviews.length}`);
    
    if (reviews.length > 0) {
      console.log('\nüìù –°–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤:');
      reviews.forEach((review, index) => {
        console.log(`${index + 1}. "${review.title}" - ${review.animeTitle} (${review.rating}/5)`);
        console.log(`   –ê–≤—Ç–æ—Ä: ${review.author.name || review.author.email}`);
        console.log(`   –õ–∞–π–∫–∏: ${review._count.likes}, –î–∏–∑–ª–∞–π–∫–∏: ${review._count.dislikes}, –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: ${review._count.comments}`);
        console.log(`   –î–∞—Ç–∞: ${review.createdAt.toLocaleDateString('ru-RU')}`);
        console.log('');
      });
    } else {
      console.log('‚ùå –û—Ç–∑—ã–≤—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
    }

    const users = await prisma.user.findMany();
    console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: ${users.length}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkReviews();
